<h1 id="bitwise">Bitwise</h1>
<p><strong>Note:</strong> The problem has an unusual memory constraint
of <strong>8mb</strong>.</p>
<p>After seeing an ad for the Banana trading app, you decided that you
wanted to try it out! Upon opening up the app, you realized that it is
not so simple…</p>
<p><img src="bitwise1.png" /></p>
<p>After finishing the 5,000-page tutorial, you finally understood how
the app works:</p>
<ul>
<li>There are 3 types of <em>commands</em>:
<code>AND val/OR val/XOR val</code>.</li>
<li>If you currently have <span class="math inline"><em>k</em></span>
<em>Coin bits</em>, after <em>executing a command</em>, you will have
<span class="math inline"><em>k</em></span> <code>AND/OR/XOR</code>
<span class="math inline"><em>v</em><em>a</em><em>l</em></span> <em>Coin
bits</em>, where <code>AND/OR/XOR</code> are the bitwise operations
corresponding to the <em>command</em> you used.</li>
<li>Suppose there are a list of <span
class="math inline"><em>N</em></span> <em>commands</em> for today’s
session. You can <em>surf the wave</em> by going through each
<em>commands</em> in order from first to last. At each <em>command</em>,
you can choose to either <em>execute that command</em>. There are <span
class="math inline">2<sup><em>N</em></sup></span> different ways to
<em>surf</em>.</li>
</ul>
<p>At the beginning, the <em>command</em> list is empty. You will be
using the Banana app for <span class="math inline"><em>Q</em></span>
days. Everyday, one of these 3 types of events will occur:</p>
<ul>
<li><code>TYPE val</code> (<code>TYPE</code> <span
class="math inline"> ∈ {“</span><code>AND</code><span
class="math inline">”,“</span><code>OR</code><span
class="math inline">”,“</span><code>XOR</code><span
class="math inline">” }</span>) - the <em>command</em>
<code>TYPE val</code> is appended to the <em>command</em> list.</li>
<li><code>REMOVE</code> - the last <em>command</em> added is now removed
from the list.</li>
<li><code>QUERY val</code> - You have <span class="math inline">0</span>
<em>Coin bits</em> at the beginning of the session. You want to count
the number of ways to <em>surf</em> on today’s <em>command</em> list
such that you will end up with <code>val</code> <em>Coin bits</em> at
the end of the session.</li>
</ul>
<h2 id="input">Input</h2>
<ul>
<li>The first line contains integer <span
class="math inline"><em>Q</em></span> - the number of days you use the
Banana app.</li>
<li>Each of the next <span class="math inline"><em>Q</em></span> lines
contains an event.</li>
</ul>
<h2 id="output">Output</h2>
<p>For each <code>QUERY</code>-type event, print the answer to that
query to a line. As the result may be large, you should print the answer
modulo <span class="math inline">1, 000, 000, 007</span>.</p>
<h2 id="constraints">Constraints</h2>
<ul>
<li><span class="math inline"><em>Q</em> ≤ 10, 000</span></li>
<li><span
class="math inline"><em>v</em><em>a</em><em>l</em> &lt; 2<sup>14</sup></span></li>
</ul>
<h2 id="subtask">Subtask</h2>
<ul>
<li>Subtask 1 (25%): <span
class="math inline"><em>Q</em> ≤ 500</span>.</li>
<li>Subtask 2 (25%): There are no <code>AND</code> and <code>OR</code>
<em>commands</em>.</li>
<li>Subtask 3 (25%): There are no <code>AND</code> and <code>XOR</code>
<em>commands</em>.</li>
<li>Subtask 4 (25%): No additional constraints</li>
</ul>
<h2 id="sample">Sample</h2>
<h3 id="input-1">Input</h3>
<pre><code>8
XOR 5
XOR 2
QUERY 7
AND 1
QUERY 1
REMOVE
OR 2
QUERY 2</code></pre>
<h3 id="output-1">Output</h3>
<pre><code>1
2
3</code></pre>
<h1 id="bitwise-1">Bitwise</h1>
<p><strong>Note:</strong> The problem has an unusual memory constraint
of <strong>8mb</strong>.</p>
<p>After seeing an ad for the Banana trading app, you decided that you
wanted to try it out! Upon opening up the app, you realized that it is
not so simple…</p>
<p><img src="bitwise1.png" /></p>
<p>After finishing the 5,000-page tutorial, you finally understood how
the app works:</p>
<ul>
<li>There are 3 types of <em>commands</em>:
<code>AND val/OR val/XOR val</code>.</li>
<li>If you currently have <span class="math inline"><em>k</em></span>
<em>Coin bits</em>, after <em>executing a command</em>, you will have
<span class="math inline"><em>k</em></span> <code>AND/OR/XOR</code>
<span class="math inline"><em>v</em><em>a</em><em>l</em></span> <em>Coin
bits</em>, where <code>AND/OR/XOR</code> are the bitwise operations
corresponding to the <em>command</em> you used.</li>
<li>Suppose there are a list of <span
class="math inline"><em>N</em></span> <em>commands</em> for today’s
session. You can <em>surf the wave</em> by going through each
<em>commands</em> in order from first to last. At each <em>command</em>,
you can choose to either <em>execute that command</em>. There are <span
class="math inline">2<sup><em>N</em></sup></span> different ways to
<em>surf</em>.</li>
</ul>
<p>At the beginning, the <em>command</em> list is empty. You will be
using the Banana app for <span class="math inline"><em>Q</em></span>
days. Everyday, one of these 3 types of events will occur:</p>
<ul>
<li><code>TYPE val</code> (<code>TYPE</code> <span
class="math inline"> ∈ {“</span><code>AND</code><span
class="math inline">”,“</span><code>OR</code><span
class="math inline">”,“</span><code>XOR</code><span
class="math inline">” }</span>) - the <em>command</em>
<code>TYPE val</code> is appended to the <em>command</em> list.</li>
<li><code>REMOVE</code> - the last <em>command</em> added is now removed
from the list.</li>
<li><code>QUERY val</code> - You have <span class="math inline">0</span>
<em>Coin bits</em> at the beginning of the session. You want to count
the number of ways to <em>surf</em> on today’s <em>command</em> list
such that you will end up with <code>val</code> <em>Coin bits</em> at
the end of the session.</li>
</ul>
<h2 id="input-2">Input</h2>
<ul>
<li>The first line contains integer <span
class="math inline"><em>Q</em></span> - the number of days you use the
Banana app.</li>
<li>Each of the next <span class="math inline"><em>Q</em></span> lines
contains an event.</li>
</ul>
<h2 id="output-2">Output</h2>
<p>For each <code>QUERY</code>-type event, print the answer to that
query to a line. As the result may be large, you should print the answer
modulo <span class="math inline">1, 000, 000, 007</span>.</p>
<h2 id="constraints-1">Constraints</h2>
<ul>
<li><span class="math inline"><em>Q</em> ≤ 10, 000</span></li>
<li><span
class="math inline"><em>v</em><em>a</em><em>l</em> &lt; 2<sup>14</sup></span></li>
</ul>
<h2 id="subtask-1">Subtask</h2>
<ul>
<li>Subtask 1 (25%): <span
class="math inline"><em>Q</em> ≤ 500</span>.</li>
<li>Subtask 2 (25%): There are no <code>AND</code> and <code>OR</code>
<em>commands</em>.</li>
<li>Subtask 3 (25%): There are no <code>AND</code> and <code>XOR</code>
<em>commands</em>.</li>
<li>Subtask 4 (25%): No additional constraints</li>
</ul>
<h2 id="sample-1">Sample</h2>
<h3 id="input-3">Input</h3>
<pre><code>8
XOR 5
XOR 2
QUERY 7
AND 1
QUERY 1
REMOVE
OR 2
QUERY 2</code></pre>
<h3 id="output-3">Output</h3>
<pre><code>1
2
3</code></pre>
